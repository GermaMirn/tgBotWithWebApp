"""init lessons models

Revision ID: 04f6f29a8ba1
Revises: 
Create Date: 2025-08-27 20:46:32.481677

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '04f6f29a8ba1'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('lessons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('lesson_type', sa.Enum('INDIVIDUAL', 'GROUP', 'TRIAL', name='lessontype', native_enum=False), nullable=False),
    sa.Column('language', sa.String(length=50), nullable=False),
    sa.Column('level', sa.String(length=20), nullable=False),
    sa.Column('teacher_telegram_id', sa.BigInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lessons_id'), 'lessons', ['id'], unique=False)
    op.create_table('lesson_attendance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lesson_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('join_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('leave_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lesson_attendance_id'), 'lesson_attendance', ['id'], unique=False)
    op.create_table('lesson_participants',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lesson_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.UUID(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('is_confirmed', sa.Boolean(), nullable=True),
    sa.Column('confirmation_date', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('(student_id IS NOT NULL OR group_id IS NOT NULL)', name='check_student_or_group_not_null'),
    sa.CheckConstraint('NOT (student_id IS NOT NULL AND group_id IS NOT NULL)', name='check_student_and_group_mutually_exclusive'),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lesson_participants_id'), 'lesson_participants', ['id'], unique=False)
    op.create_table('lesson_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lesson_id', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('status', sa.Enum('SCHEDULED', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', name='lessonstatus'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lesson_sessions_id'), 'lesson_sessions', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_lesson_sessions_id'), table_name='lesson_sessions')
    op.drop_table('lesson_sessions')
    op.drop_index(op.f('ix_lesson_participants_id'), table_name='lesson_participants')
    op.drop_table('lesson_participants')
    op.drop_index(op.f('ix_lesson_attendance_id'), table_name='lesson_attendance')
    op.drop_table('lesson_attendance')
    op.drop_index(op.f('ix_lessons_id'), table_name='lessons')
    op.drop_table('lessons')
    # ### end Alembic commands ###
